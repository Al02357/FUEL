<?xml version="1.0"?>
<launch>
    <!-- Posix SITL environment launch script -->
    <!-- launchs PX4 SITL and spawns vehicle -->
    <!-- vehicle pose -->
    <arg name="x" default="0"/>
    <arg name="y" default="0"/>
    <arg name="z" default="0"/>
    <arg name="R" default="0"/>
    <arg name="P" default="0"/>
    <arg name="Y" default="0"/>
    

    <!-- vehcile model and config -->
    <arg name="vehicle" default="p450_sslidar"/>
    <arg name="est" default="ekf2_vision"/>
    <arg name="ID" default="1"/>
    <!-- <env name="PX4_SIM_MODEL" value="$(arg vehicle)" /> -->
    <env name="PX4_SIM_MODEL" value="p450" />
    <env name="PX4_ESTIMATOR" value="$(arg est)" />
    <arg name="mavlink_udp_port" default="14560"/>
    <arg name="mavlink_tcp_port" default="4560"/>

    <arg name="udp_offboard_port_remote" value="$(eval 24540 + arg('ID'))"/>
	<arg name="udp_offboard_port_local" value="$(eval 34580 + arg('ID'))"/>

    <!-- PX4 SITL -->
    <arg name="interactive" default="true"/>
    <arg unless="$(arg interactive)" name="px4_command_arg1" value=""/>
    <arg     if="$(arg interactive)" name="px4_command_arg1" value="-d"/>

    <node name="sitl_$(arg ID)" pkg="px4" type="px4" output="screen" args="$(find px4)/ROMFS/px4fmu_common -s etc/init.d-posix/rcS -i $(arg ID) -w sitl_$(arg vehicle)_$(arg ID) $(arg px4_command_arg1)">
    </node>


    
    <!-- <arg name="cmd" default="xmlstarlet ed -d '//plugin[@name=&quot;mavlink_interface&quot;]/mavlink_tcp_port' -s '//plugin[@name=&quot;mavlink_interface&quot;]' -t elem -n mavlink_tcp_port -v $(arg mavlink_tcp_port) -u '//plugin[@name=&quot;camera_controller&quot;]/robotNamespace' -v '$(arg camNamespace)' $(arg sdf)"/> -->

    <!-- generate sdf vehicle model -->
    <arg name="cmd" default="xmlstarlet ed -d '//plugin[@name=&quot;mavlink_interface&quot;]/mavlink_tcp_port' -s '//plugin[@name=&quot;mavlink_interface&quot;]' -t elem -n mavlink_tcp_port -v $(arg mavlink_tcp_port) $(find fuel_in_gazebo)/models/$(arg vehicle)/$(arg vehicle).sdf"/>
    <param command="$(arg cmd)" name="model_description"/>
    
    <!-- spawn vehicle -->
    <node name="$(arg vehicle)_$(arg ID)_spawn" output="screen" pkg="gazebo_ros" type="spawn_model" args="-sdf -param model_description -model $(arg vehicle)_$(arg ID) -x $(arg x) -y $(arg y) -z $(arg z) -R $(arg R) -P $(arg P) -Y $(arg Y)"/>
    
    <!-- MAVROS -->
    <node pkg="mavros" type="mavros_node" name="mavros" output="screen">
        <param name="fcu_url" value="udp://:$(arg udp_offboard_port_remote)@localhost:$(arg udp_offboard_port_local)"/>
        <param name="gcs_url" value="" />
        <param name="target_system_id" value="$(arg ID)"/>
        <!-- <param name="target_system_id" value="$(eval 1 + arg('ID'))"/> -->
        <param name="target_component_id" value="$(arg ID)" />
        <!-- <param name="target_component_id" value="1" /> -->
        <rosparam command="load" file="$(find fuel_in_gazebo)/config/px4_pluginlists.yaml" />
        <rosparam command="load" file="$(find fuel_in_gazebo)/config/px4_config.yaml" />
    </node>

    <!-- run the px4_pos_estimator.cpp -->
	<arg name="input_source" default="2"/>
	<arg name="rate_hz" default="30"/>
	<node pkg="prometheus_control" type="px4_pos_estimator" name="px4_pos_estimator" output="screen">
		<!-- 定位数据输入源 0 for vicon， 1 for 激光SLAM, 2 for gazebo ground truth, 3 for T265 -->
		<param name="input_source" value="$(arg input_source)" />
		<param name="rate_hz" value="$(arg rate_hz)" />
		<param name="offset_x" value="$(arg x)" />
		<param name="offset_y" value="$(arg y)" />
		<param name="offset_z" value="$(arg z)" />
	</node>
    <node pkg="prometheus_control" type="px4_sender" name="px4_sender" output="screen">
		<rosparam command="load" file="$(find fuel_in_gazebo)/config/px4_sender.yaml"/>
	</node>


    <!-- run the ground_station.cpp -->
	<node pkg="prometheus_station" type="ground_station" name="ground_station" output="screen" launch-prefix="gnome-terminal --tab --"/>	

</launch>